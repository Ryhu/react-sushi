{"version":3,"sources":["Components/ItemTile.js","Components/MenuCategory.js","Components/MenuItemModal.js","Components/CartModal.js","App.js","serviceWorker.js","index.js"],"names":["ItemTileContainer","styled","div","ItemTile","props","onClick","setItemModalData","data","className","attributes","name","description","price","toFixed","MenuCategoryContainer","MenuCategory","id","map","menuItem","key","addToCart","ModalHeader","ModalBody","ModalFooter","MenuItemModal","useState","quantity","setQuantity","comments","setComments","resetModal","handleClose","Modal","show","onHide","centered","Title","icon","faTimes","value","onChange","e","target","type","item","CartModal","length","index","setData","slice","concat","removeItem","alert","Header","SideNav","CartButton","Body","App","showItemModal","setShowItemModal","showCartModal","setShowCartModal","itemModalData","cart","setCart","cartItem","handleCloseItemModal","handleShowItemModal","menuItemData","useEffect","fetch","method","mode","headers","then","response","json","categories","forEach","category","Object","keys","href","faCircle","faShoppingCart","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.95ae31bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\n\r\nfunction ItemTile(props) {\r\n\r\n  return (\r\n    <ItemTileContainer onClick={() => props.setItemModalData(props.data)}>\r\n      <div className=\"container\">\r\n        <div>\r\n          <p className=\"text bold\" >{ props.data.attributes.name }</p>\r\n          <p className=\"text\" >{ props.data.attributes.description }</p>\r\n        </div>\r\n        <p className=\"text bold\" >{ '$' + props.data.attributes.price.toFixed(2) }</p>\r\n      </div>\r\n    </ItemTileContainer>\r\n  );\r\n}\r\n\r\nconst ItemTileContainer = styled.div`\r\n  display: inline-block;\r\n  margin: 1rem;\r\n\r\n  .container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    width: 23rem;\r\n    border: 0.6px solid black;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n\r\n    .text {\r\n      margin: 1rem;\r\n    }\r\n\r\n    .bold {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  .container:hover{\r\n    border: 0.6px solid black;\r\n    background-color: #f9f9f9;\r\n  }\r\n`\r\n\r\n\r\nexport default ItemTile;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport ItemTile from './ItemTile'\r\n\r\nfunction MenuCategory(props) {\r\n  // data = [{menuitems}]\r\n  // name = string\r\n\r\n  return (\r\n    <div id={\"menuCategory\" + props.name}>\r\n      <MenuCategoryContainer>\r\n        <p className=\"categoryTitle\" >{props.name}</p>\r\n        { (props.data.map(menuItem => {\r\n              return <ItemTile \r\n                        data={menuItem}\r\n                        key={menuItem.attributes.id}\r\n                        addToCart={props.addToCart}\r\n                        setItemModalData={props.setItemModalData}>\r\n                      </ItemTile>\r\n        })) }\r\n      </MenuCategoryContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MenuCategoryContainer = styled.div`\r\n  .categoryTitle{\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n  }\r\n`\r\n\r\nexport default MenuCategory;","import React, {useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction MenuItemModal(props) {\r\n\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [comments, setComments] = useState('');\r\n  const increaseQuantity = () => setQuantity(quantity + 1);\r\n  const decreaseQuantity = () => setQuantity(quantity > 1 ? quantity - 1 : 1);\r\n\r\n  const resetModal = () => {\r\n    setQuantity(1)\r\n    setComments('')\r\n    props.handleClose()\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={resetModal}\r\n      centered\r\n    >\r\n      <ModalHeader>\r\n        <div>\r\n          <Modal.Title>{props.data.attributes.name}</Modal.Title>\r\n          <FontAwesomeIcon icon={faTimes} onClick={resetModal}/>\r\n        </div>\r\n        <p className=\"headerPrice\">{'$' + props.data.attributes.price.toFixed(2)}</p>\r\n      </ModalHeader>\r\n\r\n      <ModalBody>\r\n        <p>{props.data.attributes.description}</p>\r\n        <div className=\"specialInstructions\">\r\n          <p> Special instructions </p>\r\n          <textarea value={comments} onChange={(e) => setComments(e.target.value)}></textarea>\r\n        </div>\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <div className=\"quantityContainer noselect\">\r\n          <span className=\"decrease\" onClick={decreaseQuantity} >-</span>\r\n          <input className=\"quantity\" type='number' value={quantity} onChange={(e) => setQuantity(e.target.value)}></input>\r\n          <span className=\"increase\" onClick={increaseQuantity} >+</span>\r\n          <p>{'$' + (props.data.attributes.price * quantity).toFixed(2)}</p>\r\n        </div>\r\n        <div className=\"footerCloseContainer\">\r\n          <span className=\"footerButton addToCart\" onClick={() => {\r\n            let item = {\r\n              id: props.data.attributes.id,\r\n              name: props.data.attributes.name,\r\n              price: props.data.attributes.price,\r\n              quantity: quantity,\r\n              comments: comments,\r\n            }\r\n            props.addToCart(item)\r\n            resetModal()\r\n          }}> Add to Cart </span>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst ModalHeader = styled.div`\r\n  border-bottom: .6px solid grey;\r\n  div{\r\n    padding: .5rem .5rem 0 0.5rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n\r\n    svg{\r\n      color: red;\r\n      font-size: 2rem;\r\n      cursor: pointer;\r\n      padding-right: .5rem;\r\n    }\r\n  }\r\n\r\n  .headerPrice{\r\n    margin-left: 1rem;\r\n    font-weight: 600;\r\n  }\r\n`\r\nconst ModalBody = styled.div`\r\n  border-bottom: .6px solid grey;\r\n  padding: 1rem;\r\n\r\n  .specialInstructions{\r\n    margin-top: 2rem;\r\n    p{\r\n      font-weight: 500;\r\n    }\r\n\r\n    textarea{\r\n      width: 100%;\r\n      border-radius: .5rem;\r\n      outline: none;\r\n      padding: .5rem;\r\n    }\r\n  }\r\n`\r\nconst ModalFooter = styled.div`\r\n  padding: .8rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  .quantityContainer{\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    span{\r\n      padding: .3rem .8rem .3rem .8rem;\r\n      border-radius: .5rem;\r\n      font-size: 1.3rem;\r\n      font-weight: bold;\r\n      text-align: center;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .increase{\r\n      background-color: #5cd65c;\r\n      border-radius:  .5rem 1rem 1rem .5rem;\r\n    }\r\n\r\n    .decrease{\r\n      background-color: #ff5c33;\r\n      border-radius:  1rem .5rem .5rem 1rem;\r\n    }\r\n\r\n    p{\r\n      margin:0 0 0 1rem;\r\n    }\r\n\r\n    .quantity{\r\n      width: 2.5rem;\r\n      text-align: center;\r\n      margin: 0 .3rem 0 .3rem;\r\n    }\r\n  }\r\n\r\n  .footerCloseContainer {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    .footerButton{\r\n      padding: .5rem .8rem .5rem .8rem;\r\n      height: 3rem;\r\n      border-radius: .5rem;\r\n      text-align: center;\r\n      font-weight: 500;\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .addToCart {\r\n      background-color: #5cd65c;\r\n    }\r\n\r\n    .closeModal {\r\n      background-color: #ff5c33;\r\n    }\r\n  }\r\n`\r\n\r\nexport default MenuItemModal;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction CartModal(props) {\r\n\r\n  const removeItem = (index) => {\r\n    props.setData(props.data.slice(0,index).concat(props.data.slice(index+1)))\r\n  };\r\n\r\n  const checkout = () => {\r\n    alert('checkitout!')\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.handleClose}\r\n      centered\r\n    >\r\n      <ModalHeader>\r\n        <FontAwesomeIcon icon={faTimes} onClick={props.handleClose}/>\r\n        <Modal.Title>Cart</Modal.Title>\r\n      </ModalHeader>\r\n\r\n      { props.data.length > 0 ?\r\n        <ModalBody>\r\n          {props.data.map((item, index) => {\r\n            return (<div className=\"cartItem\" key={index}>\r\n                      <div className=\"itemInfo\">\r\n                        <div className=\"nameAndQuantity\">\r\n                          <FontAwesomeIcon icon={faTimes} onClick={(e) => {removeItem(index)}}/>\r\n                          <span className=\"quantity\">{item.quantity}</span>\r\n                          <span>{item.name}</span>\r\n                        </div>\r\n                        <span>{'$' + (item.quantity * item.price).toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"itemComments\">\r\n                        <span>{item.comments}</span>\r\n                      </div>\r\n                    </div>)\r\n          })}\r\n        </ModalBody>\r\n\r\n        : <ModalBody>\r\n            <p className=\"emptyMessage\">There's nothing here!</p>\r\n          </ModalBody>\r\n      }\r\n\r\n      <ModalFooter>\r\n        <div className=\"footerContainer\">\r\n          <span className={(props.data.length > 0 ? \"resetModal\" : \"disabled\") + \" noselect footerButton\"} onClick={() => {props.setData([])}}> Empty Cart </span>\r\n          <span className={(props.data.length > 0 ? \"checkout\" : \"disabled\") + \" noselect footerButton\"} onClick={checkout}> Checkout </span>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst ModalHeader = styled.div`\r\n  border-bottom: .6px solid grey;\r\n  padding: .5rem;\r\n  text-align: center;\r\n\r\n  svg{\r\n    color: red;\r\n    font-size: 2rem;\r\n    position: absolute;\r\n    left: calc(100% - 2rem);\r\n    cursor: pointer;\r\n    padding-right: .5rem;\r\n  }\r\n`\r\nconst ModalBody = styled.div`\r\n  border-bottom: .6px solid grey;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  .emptyMessage{\r\n    font-size: 1.3rem;\r\n    margin: 1.5rem;\r\n    color: grey;\r\n  }\r\n  .cartItem{\r\n    padding: .5rem 1.2rem .5rem 1.2rem;\r\n    width: 100%;\r\n    border-bottom: 0.6px solid grey;\r\n    span{\r\n      font-size: 1.3rem;\r\n      text-align: center;\r\n    }\r\n    .itemInfo{\r\n      text-align: left;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n      .nameAndQuantity{\r\n        display: inline-block;\r\n\r\n        svg{\r\n          color: red;\r\n          font-size: 1.2rem;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .quantity{\r\n          margin: 0 1rem 0 1rem;\r\n        }\r\n      }\r\n    }\r\n\r\n    .itemComments{\r\n      margin-top: -.2rem;\r\n      padding-left: 2rem;\r\n      span{\r\n        word-wrap: break-word;\r\n        font-size: .9rem;\r\n        box-sizing: border-box\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst ModalFooter = styled.div`\r\n  padding: .8rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  .footerContainer {\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n\r\n    .footerButton{\r\n      padding: .5rem .8rem .5rem .8rem;\r\n      height: 3rem;\r\n      border-radius: .5rem;\r\n      text-align: center;\r\n      font-weight: 500;\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .resetModal {\r\n      background-color: #ff5c33;\r\n    }\r\n\r\n    .checkout {\r\n      background-color: #5cd65c;\r\n    }\r\n\r\n    .disabled {\r\n      background-color: grey;\r\n      pointer-events: none;\r\n      opacity: 70%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default CartModal;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport styled from 'styled-components'\nimport MenuCategory from './Components/MenuCategory'\nimport MenuItemModal from './Components/MenuItemModal'\nimport CartModal from './Components/CartModal'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart,faCircle } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction App() {\n\n  const [data, setData] = useState({})\n  const [showItemModal, setShowItemModal] = useState(false);\n  const [showCartModal, setShowCartModal] = useState(false);\n  const [itemModalData, setItemModalData] = useState(null);\n  const [cart, setCart] = useState([])\n\n  const addToCart = (cartItem) => {\n    setCart(cart.concat(cartItem))\n    handleCloseItemModal()\n  }\n\n  const handleCloseItemModal = () => setShowItemModal(false);\n\n  const handleShowItemModal = (menuItemData) => {\n    setItemModalData(menuItemData)\n    setShowItemModal(true)\n  };\n\n\n  const handleCloseCartModal = () => setShowCartModal(false);\n\n  const handleShowCartModal = () => setShowCartModal(true);\n\n  useEffect(() => {\n    fetch('http://localhost:3000/menu_item', {\n      method: 'get',\n      mode: 'cors',\n      headers: {\n          'Content-Type': 'application/json',\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        let categories = {}\n\n        data.data.forEach(menuItem => {\n          if (categories[menuItem.attributes.category]){\n            categories[menuItem.attributes.category] = categories[menuItem.attributes.category].concat(menuItem)\n          } else {\n            categories[menuItem.attributes.category] = [menuItem]\n          }\n        })\n        setData(categories)\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header>\n        <span className=\"headerOption\">Home</span>\n        <span className=\"headerOption\">Menu</span>\n        <span className=\"headerOption\">Contact</span>\n        <span className=\"headerOption\"></span>\n      </Header>\n\n      <SideNav>\n        {\n          Object.keys(data).length > 1 &&\n            Object.keys(data).map(key => {\n              return <a className=\"sideNavButton\" href={\"#menuCategory\" + key} key={key}>\n                { key }\n              </a>\n            })\n        }\n      </SideNav>\n\n      <CartButton>\n        <span className=\"fa-stack fa-2x\" onClick={handleShowCartModal}>\n          <FontAwesomeIcon className=\"fa-stack-2x circle\" icon={faCircle} />\n          <FontAwesomeIcon className=\"fa-stack-1x\" icon={faShoppingCart} />\n        </span>\n      </CartButton>\n\n      {/* Modals */}\n      { itemModalData && \n        <MenuItemModal data={itemModalData} addToCart={addToCart} show={showItemModal} handleClose={handleCloseItemModal}></MenuItemModal> }\n\n      <CartModal data={cart} setData={setCart} show={showCartModal} handleClose={handleCloseCartModal}></CartModal> \n\n      <Body>\n        {\n          Object.keys(data).length > 1 &&\n            Object.keys(data).map(key => {\n              return <MenuCategory data={data[key]} name={key} setItemModalData={handleShowItemModal} addToCart={addToCart} key={key} ></MenuCategory>\n            })\n        }\n      {/* <MenuCategory data={data}></MenuCategory> */}\n      </Body>\n      <button onClick={() => console.log(cart)}>debugger!</button>\n    </div>\n  );\n}\n\n\n\n\n\n// { Object.keys(data).length > 0\n//   ? (data.map(menuItem => {\n//       if(menuItem.name){\n//         return <ItemTile name={menuItem.name} description={menuItem.description} price={menuItem.price}></ItemTile>\n//       }\n//      }))\n\n//   : <div></div>\n// }\n\n\n\nconst Header = styled.div`\n  background-color: blue;\n  color: white;\n\n  .headerOption {\n    margin: 3rem;\n  }\n`\n\nconst SideNav = styled.div`\n  position: fixed;\n  top: 50%;\n  transform: translate(0, -50%);\n  display: flex;\n  flex-direction: column;\n  transition: 0.3s;\n\n  .sideNavButton {\n    padding: 0.5rem;\n    background-color: grey;\n    color: white;\n    text-decoration: none;\n    border-radius: 0 1rem 1rem 0;\n    margin: 0.2rem;\n    margin-left: 0;\n    :hover{\n      color:white;\n      background-color: blue;\n      transition: 0.5s;\n    }\n  }\n`\n\nconst CartButton = styled.div`\n  font-size: 1.3rem;\n  position: fixed;\n  top: calc(100% - 7.3rem);\n  left: calc(80% + (20% - 2rem) / 2);\n  color: white;\n  border-radius: 100%;\n  .fa-stack{\n    .circle{\n      transition: 0.5s;\n      color: gray;\n    }\n    :hover{\n      .circle{\n        color: blue;\n      }\n    }\n  }\n`\n\nconst Body = styled.div`\n  width: 80vw;\n  text-align: center;\n  margin: auto;\n`\n\n\nexport default App;\n// ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}